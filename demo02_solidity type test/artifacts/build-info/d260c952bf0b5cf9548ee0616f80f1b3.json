{
	"id": "d260c952bf0b5cf9548ee0616f80f1b3",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.18",
	"solcLongVersion": "0.8.18+commit.87f61d96",
	"input": {
		"language": "Solidity",
		"sources": {
			"demo02_solidity type test/BooleanTest.sol": {
				"content": "pragma solidity >0.8.0;\r\ncontract BooleanTest{\r\n    //对于java是 public int count\r\n    uint16  count ;\r\n    /*\r\n        对比java\r\n        public void  modify(int count){\r\n            count = count;\r\n        }\r\n    \r\n    */\r\n    function modify(uint16 number) public{\r\n        if(number > 10){\r\n            return;\r\n        }else if(number > 0){\r\n            count += number;\r\n        }else {\r\n            return ;\r\n        }\r\n    }\r\n    /*\r\n        对比java\r\n        public int getCount(){\r\n            return count;\r\n        }\r\n        这里的防护直是returns别搞错了\r\n    */\r\n    function getCount() public view  returns(uint16){\r\n        return count;\r\n    }\r\n\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"demo02_solidity type test/BooleanTest.sol": {
				"BooleanTest": {
					"abi": [
						{
							"inputs": [],
							"name": "getCount",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "number",
									"type": "uint16"
								}
							],
							"name": "modify",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"demo02_solidity type test/BooleanTest.sol\":25:682  contract BooleanTest{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"demo02_solidity type test/BooleanTest.sol\":25:682  contract BooleanTest{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xa87d942c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xc05d71ad\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"demo02_solidity type test/BooleanTest.sol\":598:677  function getCount() public view  returns(uint16){... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"demo02_solidity type test/BooleanTest.sol\":233:436  function modify(uint16 number) public{... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"demo02_solidity type test/BooleanTest.sol\":598:677  function getCount() public view  returns(uint16){... */\n    tag_6:\n        /* \"demo02_solidity type test/BooleanTest.sol\":639:645  uint16 */\n      0x00\n        /* \"demo02_solidity type test/BooleanTest.sol\":664:669  count */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"demo02_solidity type test/BooleanTest.sol\":657:669  return count */\n      swap1\n      pop\n        /* \"demo02_solidity type test/BooleanTest.sol\":598:677  function getCount() public view  returns(uint16){... */\n      swap1\n      jump\t// out\n        /* \"demo02_solidity type test/BooleanTest.sol\":233:436  function modify(uint16 number) public{... */\n    tag_12:\n        /* \"demo02_solidity type test/BooleanTest.sol\":293:295  10 */\n      0x0a\n        /* \"demo02_solidity type test/BooleanTest.sol\":284:290  number */\n      dup2\n        /* \"demo02_solidity type test/BooleanTest.sol\":284:295  number > 10 */\n      0xffff\n      and\n      gt\n        /* \"demo02_solidity type test/BooleanTest.sol\":311:318  return; */\n      tag_14\n        /* \"demo02_solidity type test/BooleanTest.sol\":281:429  if(number > 10){... */\n      jumpi\n        /* \"demo02_solidity type test/BooleanTest.sol\":346:347  0 */\n      0x00\n        /* \"demo02_solidity type test/BooleanTest.sol\":337:343  number */\n      dup2\n        /* \"demo02_solidity type test/BooleanTest.sol\":337:347  number > 0 */\n      0xffff\n      and\n      gt\n        /* \"demo02_solidity type test/BooleanTest.sol\":334:429  if(number > 0){... */\n      iszero\n      tag_17\n      jumpi\n        /* \"demo02_solidity type test/BooleanTest.sol\":372:378  number */\n      dup1\n        /* \"demo02_solidity type test/BooleanTest.sol\":363:368  count */\n      0x00\n      dup1\n        /* \"demo02_solidity type test/BooleanTest.sol\":363:378  count += number */\n      dup3\n      dup3\n      dup3\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      swap3\n      pop\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"demo02_solidity type test/BooleanTest.sol\":334:429  if(number > 0){... */\n      jump(tag_20)\n    tag_17:\n        /* \"demo02_solidity type test/BooleanTest.sol\":410:418  return ; */\n      jump(tag_14)\n        /* \"demo02_solidity type test/BooleanTest.sol\":334:429  if(number > 0){... */\n    tag_20:\n        /* \"demo02_solidity type test/BooleanTest.sol\":233:436  function modify(uint16 number) public{... */\n    tag_14:\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:96   */\n    tag_21:\n        /* \"#utility.yul\":43:50   */\n      0x00\n        /* \"#utility.yul\":83:89   */\n      0xffff\n        /* \"#utility.yul\":76:81   */\n      dup3\n        /* \"#utility.yul\":72:90   */\n      and\n        /* \"#utility.yul\":61:90   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:96   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":102:217   */\n    tag_22:\n        /* \"#utility.yul\":187:210   */\n      tag_32\n        /* \"#utility.yul\":204:209   */\n      dup2\n        /* \"#utility.yul\":187:210   */\n      tag_21\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":182:185   */\n      dup3\n        /* \"#utility.yul\":175:211   */\n      mstore\n        /* \"#utility.yul\":102:217   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":223:441   */\n    tag_8:\n        /* \"#utility.yul\":314:318   */\n      0x00\n        /* \"#utility.yul\":352:354   */\n      0x20\n        /* \"#utility.yul\":341:350   */\n      dup3\n        /* \"#utility.yul\":337:355   */\n      add\n        /* \"#utility.yul\":329:355   */\n      swap1\n      pop\n        /* \"#utility.yul\":365:434   */\n      tag_34\n        /* \"#utility.yul\":431:432   */\n      0x00\n        /* \"#utility.yul\":420:429   */\n      dup4\n        /* \"#utility.yul\":416:433   */\n      add\n        /* \"#utility.yul\":407:413   */\n      dup5\n        /* \"#utility.yul\":365:434   */\n      tag_22\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":223:441   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":528:645   */\n    tag_24:\n        /* \"#utility.yul\":637:638   */\n      0x00\n        /* \"#utility.yul\":634:635   */\n      dup1\n        /* \"#utility.yul\":627:639   */\n      revert\n        /* \"#utility.yul\":774:894   */\n    tag_26:\n        /* \"#utility.yul\":846:869   */\n      tag_39\n        /* \"#utility.yul\":863:868   */\n      dup2\n        /* \"#utility.yul\":846:869   */\n      tag_21\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":839:844   */\n      dup2\n        /* \"#utility.yul\":836:870   */\n      eq\n        /* \"#utility.yul\":826:888   */\n      tag_40\n      jumpi\n        /* \"#utility.yul\":884:885   */\n      0x00\n        /* \"#utility.yul\":881:882   */\n      dup1\n        /* \"#utility.yul\":874:886   */\n      revert\n        /* \"#utility.yul\":826:888   */\n    tag_40:\n        /* \"#utility.yul\":774:894   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":900:1037   */\n    tag_27:\n        /* \"#utility.yul\":945:950   */\n      0x00\n        /* \"#utility.yul\":983:989   */\n      dup2\n        /* \"#utility.yul\":970:990   */\n      calldataload\n        /* \"#utility.yul\":961:990   */\n      swap1\n      pop\n        /* \"#utility.yul\":999:1031   */\n      tag_42\n        /* \"#utility.yul\":1025:1030   */\n      dup2\n        /* \"#utility.yul\":999:1031   */\n      tag_26\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":900:1037   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1043:1370   */\n    tag_11:\n        /* \"#utility.yul\":1101:1107   */\n      0x00\n        /* \"#utility.yul\":1150:1152   */\n      0x20\n        /* \"#utility.yul\":1138:1147   */\n      dup3\n        /* \"#utility.yul\":1129:1136   */\n      dup5\n        /* \"#utility.yul\":1125:1148   */\n      sub\n        /* \"#utility.yul\":1121:1153   */\n      slt\n        /* \"#utility.yul\":1118:1237   */\n      iszero\n      tag_44\n      jumpi\n        /* \"#utility.yul\":1156:1235   */\n      tag_45\n      tag_24\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1118:1237   */\n    tag_44:\n        /* \"#utility.yul\":1276:1277   */\n      0x00\n        /* \"#utility.yul\":1301:1353   */\n      tag_46\n        /* \"#utility.yul\":1345:1352   */\n      dup5\n        /* \"#utility.yul\":1336:1342   */\n      dup3\n        /* \"#utility.yul\":1325:1334   */\n      dup6\n        /* \"#utility.yul\":1321:1343   */\n      add\n        /* \"#utility.yul\":1301:1353   */\n      tag_27\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1291:1353   */\n      swap2\n      pop\n        /* \"#utility.yul\":1247:1363   */\n      pop\n        /* \"#utility.yul\":1043:1370   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1376:1556   */\n    tag_28:\n        /* \"#utility.yul\":1424:1501   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1421:1422   */\n      0x00\n        /* \"#utility.yul\":1414:1502   */\n      mstore\n        /* \"#utility.yul\":1521:1525   */\n      0x11\n        /* \"#utility.yul\":1518:1519   */\n      0x04\n        /* \"#utility.yul\":1511:1526   */\n      mstore\n        /* \"#utility.yul\":1545:1549   */\n      0x24\n        /* \"#utility.yul\":1542:1543   */\n      0x00\n        /* \"#utility.yul\":1535:1550   */\n      revert\n        /* \"#utility.yul\":1562:1755   */\n    tag_19:\n        /* \"#utility.yul\":1601:1604   */\n      0x00\n        /* \"#utility.yul\":1620:1639   */\n      tag_49\n        /* \"#utility.yul\":1637:1638   */\n      dup3\n        /* \"#utility.yul\":1620:1639   */\n      tag_21\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":1615:1639   */\n      swap2\n      pop\n        /* \"#utility.yul\":1653:1672   */\n      tag_50\n        /* \"#utility.yul\":1670:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1672   */\n      tag_21\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1648:1672   */\n      swap3\n      pop\n        /* \"#utility.yul\":1695:1696   */\n      dup3\n        /* \"#utility.yul\":1692:1693   */\n      dup3\n        /* \"#utility.yul\":1688:1697   */\n      add\n        /* \"#utility.yul\":1681:1697   */\n      swap1\n      pop\n        /* \"#utility.yul\":1718:1724   */\n      0xffff\n        /* \"#utility.yul\":1713:1716   */\n      dup2\n        /* \"#utility.yul\":1710:1725   */\n      gt\n        /* \"#utility.yul\":1707:1748   */\n      iszero\n      tag_51\n      jumpi\n        /* \"#utility.yul\":1728:1746   */\n      tag_52\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1707:1748   */\n    tag_51:\n        /* \"#utility.yul\":1562:1755   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220d55cf12d83d2b556fb19b2f34b8017c133bbcbd4de57ca048b4821c1fedbfcbe64736f6c63430008120033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061021c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063a87d942c1461003b578063c05d71ad14610059575b600080fd5b610043610075565b6040516100509190610108565b60405180910390f35b610073600480360381019061006e9190610154565b61008c565b005b60008060009054906101000a900461ffff16905090565b600a8161ffff16116100e85760008161ffff1611156100e257806000808282829054906101000a900461ffff166100c391906101b0565b92506101000a81548161ffff021916908361ffff1602179055506100e7565b6100e8565b5b50565b600061ffff82169050919050565b610102816100eb565b82525050565b600060208201905061011d60008301846100f9565b92915050565b600080fd5b610131816100eb565b811461013c57600080fd5b50565b60008135905061014e81610128565b92915050565b60006020828403121561016a57610169610123565b5b60006101788482850161013f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101bb826100eb565b91506101c6836100eb565b9250828201905061ffff8111156101e0576101df610181565b5b9291505056fea2646970667358221220d55cf12d83d2b556fb19b2f34b8017c133bbcbd4de57ca048b4821c1fedbfcbe64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA87D942C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC05D71AD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x8C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xFFFF AND GT PUSH2 0xE8 JUMPI PUSH1 0x0 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE2 JUMPI DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0xEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 DUP2 PUSH2 0xEB JUMP JUMPDEST DUP2 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x128 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x123 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BB DUP3 PUSH2 0xEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6 DUP4 PUSH2 0xEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0x181 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x5C CALL 0x2D DUP4 0xD2 0xB5 JUMP 0xFB NOT 0xB2 RETURN 0x4B DUP1 OR 0xC1 CALLER 0xBB 0xCB 0xD4 0xDE JUMPI 0xCA DIV DUP12 BASEFEE 0x21 0xC1 INVALID 0xDB 0xFC 0xBE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "25:657:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getCount_34": {
									"entryPoint": 117,
									"id": 34,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@modify_26": {
									"entryPoint": 140,
									"id": 26,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_uint16": {
									"entryPoint": 319,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint16": {
									"entryPoint": 340,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 264,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint16": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 235,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 385,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 291,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 296,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1758:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "51:45:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "61:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "76:5:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "83:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "72:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "72:18:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "61:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "33:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "43:7:1",
														"type": ""
													}
												],
												"src": "7:89:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "165:52:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "182:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "204:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "187:16:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "187:23:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "175:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "175:36:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "175:36:1"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "153:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "160:3:1",
														"type": ""
													}
												],
												"src": "102:115:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "319:122:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "329:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "341:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "352:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "337:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "337:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "329:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "407:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "420:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "431:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "416:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "416:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "365:41:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "365:69:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "365:69:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "291:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "303:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "314:4:1",
														"type": ""
													}
												],
												"src": "223:218:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "487:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "497:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "513:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "507:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "507:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "497:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "480:6:1",
														"type": ""
													}
												],
												"src": "447:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "617:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "634:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "637:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "627:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "627:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "627:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "528:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "740:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "757:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "760:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "750:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "750:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "750:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "651:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "816:78:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "872:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "881:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "884:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "874:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "874:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "874:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "839:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "863:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nodeType": "YulIdentifier",
																					"src": "846:16:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "846:23:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "836:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "836:34:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "829:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "829:42:1"
															},
															"nodeType": "YulIf",
															"src": "826:62:1"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "809:5:1",
														"type": ""
													}
												],
												"src": "774:120:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "951:86:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "961:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "983:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "970:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "970:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "961:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1025:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "999:25:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "999:32:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "999:32:1"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "929:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "937:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "945:5:1",
														"type": ""
													}
												],
												"src": "900:137:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1108:262:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1154:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1156:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1156:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1156:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1129:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1138:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1125:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1125:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1150:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1121:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1121:32:1"
															},
															"nodeType": "YulIf",
															"src": "1118:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "1247:116:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1262:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1276:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1266:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1291:62:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1325:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1336:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1321:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1321:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1345:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nodeType": "YulIdentifier",
																			"src": "1301:19:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1301:52:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1291:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1078:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1089:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1101:6:1",
														"type": ""
													}
												],
												"src": "1043:327:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1404:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1421:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1424:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1414:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1414:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1414:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1518:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1521:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1511:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1511:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1511:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1542:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1545:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1535:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1535:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1535:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1376:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1605:150:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1615:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1637:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1620:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1620:19:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1615:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1648:24:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1670:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint16",
																	"nodeType": "YulIdentifier",
																	"src": "1653:16:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1653:19:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1648:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1681:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1692:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1695:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1688:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1681:3:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1726:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1728:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1728:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1728:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "sum",
																		"nodeType": "YulIdentifier",
																		"src": "1713:3:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1718:6:1",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1710:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1710:15:1"
															},
															"nodeType": "YulIf",
															"src": "1707:41:1"
														}
													]
												},
												"name": "checked_add_t_uint16",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1592:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1595:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "1601:3:1",
														"type": ""
													}
												],
												"src": "1562:193:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint16(x, y) -> sum {\n        x := cleanup_t_uint16(x)\n        y := cleanup_t_uint16(y)\n        sum := add(x, y)\n\n        if gt(sum, 0xffff) { panic_error_0x11() }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c8063a87d942c1461003b578063c05d71ad14610059575b600080fd5b610043610075565b6040516100509190610108565b60405180910390f35b610073600480360381019061006e9190610154565b61008c565b005b60008060009054906101000a900461ffff16905090565b600a8161ffff16116100e85760008161ffff1611156100e257806000808282829054906101000a900461ffff166100c391906101b0565b92506101000a81548161ffff021916908361ffff1602179055506100e7565b6100e8565b5b50565b600061ffff82169050919050565b610102816100eb565b82525050565b600060208201905061011d60008301846100f9565b92915050565b600080fd5b610131816100eb565b811461013c57600080fd5b50565b60008135905061014e81610128565b92915050565b60006020828403121561016a57610169610123565b5b60006101788482850161013f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006101bb826100eb565b91506101c6836100eb565b9250828201905061ffff8111156101e0576101df610181565b5b9291505056fea2646970667358221220d55cf12d83d2b556fb19b2f34b8017c133bbcbd4de57ca048b4821c1fedbfcbe64736f6c63430008120033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xA87D942C EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0xC05D71AD EQ PUSH2 0x59 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x43 PUSH2 0x75 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x50 SWAP2 SWAP1 PUSH2 0x108 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x73 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6E SWAP2 SWAP1 PUSH2 0x154 JUMP JUMPDEST PUSH2 0x8C JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0xA DUP2 PUSH2 0xFFFF AND GT PUSH2 0xE8 JUMPI PUSH1 0x0 DUP2 PUSH2 0xFFFF AND GT ISZERO PUSH2 0xE2 JUMPI DUP1 PUSH1 0x0 DUP1 DUP3 DUP3 DUP3 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0xE7 JUMP JUMPDEST PUSH2 0xE8 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x102 DUP2 PUSH2 0xEB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xF9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x131 DUP2 PUSH2 0xEB JUMP JUMPDEST DUP2 EQ PUSH2 0x13C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x14E DUP2 PUSH2 0x128 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x123 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x178 DUP5 DUP3 DUP6 ADD PUSH2 0x13F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1BB DUP3 PUSH2 0xEB JUMP JUMPDEST SWAP2 POP PUSH2 0x1C6 DUP4 PUSH2 0xEB JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP PUSH2 0xFFFF DUP2 GT ISZERO PUSH2 0x1E0 JUMPI PUSH2 0x1DF PUSH2 0x181 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD5 0x5C CALL 0x2D DUP4 0xD2 0xB5 JUMP 0xFB NOT 0xB2 RETURN 0x4B DUP1 OR 0xC1 CALLER 0xBB 0xCB 0xD4 0xDE JUMPI 0xCA DIV DUP12 BASEFEE 0x21 0xC1 INVALID 0xDB 0xFC 0xBE PUSH5 0x736F6C6343 STOP ADDMOD SLT STOP CALLER ",
							"sourceMap": "25:657:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;598:79;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;233:203;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;598:79;639:6;664:5;;;;;;;;;;;657:12;;598:79;:::o;233:203::-;293:2;284:6;:11;;;311:7;281:148;346:1;337:6;:10;;;334:95;;;372:6;363:5;;:15;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;334:95;;;410:8;;334:95;233:203;;:::o;7:89:1:-;43:7;83:6;76:5;72:18;61:29;;7:89;;;:::o;102:115::-;187:23;204:5;187:23;:::i;:::-;182:3;175:36;102:115;;:::o;223:218::-;314:4;352:2;341:9;337:18;329:26;;365:69;431:1;420:9;416:17;407:6;365:69;:::i;:::-;223:218;;;;:::o;528:117::-;637:1;634;627:12;774:120;846:23;863:5;846:23;:::i;:::-;839:5;836:34;826:62;;884:1;881;874:12;826:62;774:120;:::o;900:137::-;945:5;983:6;970:20;961:29;;999:32;1025:5;999:32;:::i;:::-;900:137;;;;:::o;1043:327::-;1101:6;1150:2;1138:9;1129:7;1125:23;1121:32;1118:119;;;1156:79;;:::i;:::-;1118:119;1276:1;1301:52;1345:7;1336:6;1325:9;1321:22;1301:52;:::i;:::-;1291:62;;1247:116;1043:327;;;;:::o;1376:180::-;1424:77;1421:1;1414:88;1521:4;1518:1;1511:15;1545:4;1542:1;1535:15;1562:193;1601:3;1620:19;1637:1;1620:19;:::i;:::-;1615:24;;1653:19;1670:1;1653:19;:::i;:::-;1648:24;;1695:1;1692;1688:9;1681:16;;1718:6;1713:3;1710:15;1707:41;;;1728:18;;:::i;:::-;1707:41;1562:193;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "108000",
								"executionCost": "153",
								"totalCost": "108153"
							},
							"external": {
								"getCount()": "2457",
								"modify(uint16)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 25,
									"end": 682,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 25,
									"end": 682,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d55cf12d83d2b556fb19b2f34b8017c133bbcbd4de57ca048b4821c1fedbfcbe64736f6c63430008120033",
									".code": [
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "A87D942C"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "C05D71AD"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 25,
											"end": 682,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 25,
											"end": 682,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 598,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 598,
											"end": 677,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 233,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 436,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 598,
											"end": 677,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 639,
											"end": 645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 669,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 664,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 664,
											"end": 669,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 664,
											"end": 669,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 664,
											"end": 669,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 657,
											"end": 669,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 657,
											"end": 669,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 598,
											"end": 677,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 293,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "A"
										},
										{
											"begin": 284,
											"end": 290,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 284,
											"end": 295,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 284,
											"end": 295,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 284,
											"end": 295,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 311,
											"end": 318,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 281,
											"end": 429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 346,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 337,
											"end": 343,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 337,
											"end": 347,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 337,
											"end": 347,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 337,
											"end": 347,
											"name": "GT",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 372,
											"end": 378,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 368,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 363,
											"end": 368,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 363,
											"end": 378,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "PUSH",
											"source": 0,
											"value": "FFFF"
										},
										{
											"begin": 363,
											"end": 378,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 363,
											"end": 378,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 410,
											"end": 418,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 410,
											"end": 418,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 334,
											"end": 429,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 233,
											"end": 436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 233,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 96,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 7,
											"end": 96,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 43,
											"end": 50,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 83,
											"end": 89,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 76,
											"end": 81,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 72,
											"end": 90,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 61,
											"end": 90,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 61,
											"end": 90,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 96,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 96,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 96,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 102,
											"end": 217,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 102,
											"end": 217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 204,
											"end": 209,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 187,
											"end": 210,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 187,
											"end": 210,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 187,
											"end": 210,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 182,
											"end": 185,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 175,
											"end": 211,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 102,
											"end": 217,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 102,
											"end": 217,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 441,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 441,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 314,
											"end": 318,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 352,
											"end": 354,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 341,
											"end": 350,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 337,
											"end": 355,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 329,
											"end": 355,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 329,
											"end": 355,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 431,
											"end": 432,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 429,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 416,
											"end": 433,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 407,
											"end": 413,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 365,
											"end": 434,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 365,
											"end": 434,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 365,
											"end": 434,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 365,
											"end": 434,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 223,
											"end": 441,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 441,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 223,
											"end": 441,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 528,
											"end": 645,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 528,
											"end": 645,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 637,
											"end": 638,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 634,
											"end": 635,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 627,
											"end": 639,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 774,
											"end": 894,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 774,
											"end": 894,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 846,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 863,
											"end": 868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 846,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 846,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 846,
											"end": 869,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 846,
											"end": 869,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 839,
											"end": 844,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 836,
											"end": 870,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 826,
											"end": 888,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 888,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 884,
											"end": 885,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 881,
											"end": 882,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 874,
											"end": 886,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 826,
											"end": 888,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 826,
											"end": 888,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 774,
											"end": 894,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 774,
											"end": 894,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1037,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 900,
											"end": 1037,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 945,
											"end": 950,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 983,
											"end": 989,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 970,
											"end": 990,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 961,
											"end": 990,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1025,
											"end": 1030,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1031,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 999,
											"end": 1031,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 999,
											"end": 1031,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 999,
											"end": 1031,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1037,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1037,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1037,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 900,
											"end": 1037,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1370,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1043,
											"end": 1370,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1101,
											"end": 1107,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1152,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1138,
											"end": 1147,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1129,
											"end": 1136,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1125,
											"end": 1148,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1121,
											"end": 1153,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1156,
											"end": 1235,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1156,
											"end": 1235,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1118,
											"end": 1237,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1276,
											"end": 1277,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1345,
											"end": 1352,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1336,
											"end": 1342,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1325,
											"end": 1334,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1321,
											"end": 1343,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1353,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1301,
											"end": 1353,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1301,
											"end": 1353,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1301,
											"end": 1353,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1353,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1353,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1247,
											"end": 1363,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1370,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1370,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1370,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1043,
											"end": 1370,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1376,
											"end": 1556,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1376,
											"end": 1556,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1424,
											"end": 1501,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1421,
											"end": 1422,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1414,
											"end": 1502,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1521,
											"end": 1525,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1518,
											"end": 1519,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1511,
											"end": 1526,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1545,
											"end": 1549,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1542,
											"end": 1543,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1535,
											"end": 1550,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1604,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1637,
											"end": 1638,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1620,
											"end": 1639,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1620,
											"end": 1639,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1639,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1615,
											"end": 1639,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1670,
											"end": 1671,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1653,
											"end": 1672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "tag",
											"source": 1,
											"value": "50"
										},
										{
											"begin": 1653,
											"end": 1672,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1648,
											"end": 1672,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1692,
											"end": 1693,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1681,
											"end": 1697,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1718,
											"end": 1724,
											"name": "PUSH",
											"source": 1,
											"value": "FFFF"
										},
										{
											"begin": 1713,
											"end": 1716,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1725,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1728,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "tag",
											"source": 1,
											"value": "52"
										},
										{
											"begin": 1728,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1707,
											"end": 1748,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1562,
											"end": 1755,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"demo02_solidity type test/BooleanTest.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getCount()": "a87d942c",
							"modify(uint16)": "c05d71ad"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getCount\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"number\",\"type\":\"uint16\"}],\"name\":\"modify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"demo02_solidity type test/BooleanTest.sol\":\"BooleanTest\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"demo02_solidity type test/BooleanTest.sol\":{\"keccak256\":\"0x4dcba52b2c0adb724d01d911775edd8b9e42ece8055edc76cdb5aa0c4a0ca146\",\"urls\":[\"bzz-raw://5df114bac0968728db99490d7de89f89969d896e2e4ee275042db76a6d0a245c\",\"dweb:/ipfs/QmSHf3mXcYJXsJ5FaAjmn76YKJX4sVRDwRcCiQvTWduJuh\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "demo02_solidity type test/BooleanTest.sol:BooleanTest",
								"label": "count",
								"offset": 0,
								"slot": "0",
								"type": "t_uint16"
							}
						],
						"types": {
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> demo02_solidity type test/BooleanTest.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "demo02_solidity type test/BooleanTest.sol",
					"start": -1
				},
				"type": "Warning"
			}
		],
		"sources": {
			"demo02_solidity type test/BooleanTest.sol": {
				"ast": {
					"absolutePath": "demo02_solidity type test/BooleanTest.sol",
					"exportedSymbols": {
						"BooleanTest": [
							35
						]
					},
					"id": 36,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								">",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "BooleanTest",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 35,
							"linearizedBaseContracts": [
								35
							],
							"name": "BooleanTest",
							"nameLocation": "34:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 3,
									"mutability": "mutable",
									"name": "count",
									"nameLocation": "98:5:0",
									"nodeType": "VariableDeclaration",
									"scope": 35,
									"src": "90:13:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 2,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "90:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 25,
										"nodeType": "Block",
										"src": "270:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 10,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 8,
														"name": "number",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "284:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "3130",
														"id": 9,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "293:2:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_10_by_1",
															"typeString": "int_const 10"
														},
														"value": "10"
													},
													"src": "284:11:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														},
														"id": 15,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 13,
															"name": "number",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "337:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 14,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "346:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "337:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseBody": {
														"id": 22,
														"nodeType": "Block",
														"src": "395:34:0",
														"statements": [
															{
																"functionReturnParameters": 7,
																"id": 21,
																"nodeType": "Return",
																"src": "410:8:0"
															}
														]
													},
													"id": 23,
													"nodeType": "IfStatement",
													"src": "334:95:0",
													"trueBody": {
														"id": 20,
														"nodeType": "Block",
														"src": "348:42:0",
														"statements": [
															{
																"expression": {
																	"id": 18,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftHandSide": {
																		"id": 16,
																		"name": "count",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3,
																		"src": "363:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"nodeType": "Assignment",
																	"operator": "+=",
																	"rightHandSide": {
																		"id": 17,
																		"name": "number",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 5,
																		"src": "372:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint16",
																			"typeString": "uint16"
																		}
																	},
																	"src": "363:15:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint16",
																		"typeString": "uint16"
																	}
																},
																"id": 19,
																"nodeType": "ExpressionStatement",
																"src": "363:15:0"
															}
														]
													}
												},
												"id": 24,
												"nodeType": "IfStatement",
												"src": "281:148:0",
												"trueBody": {
													"id": 12,
													"nodeType": "Block",
													"src": "296:33:0",
													"statements": [
														{
															"functionReturnParameters": 7,
															"id": 11,
															"nodeType": "Return",
															"src": "311:7:0"
														}
													]
												}
											}
										]
									},
									"functionSelector": "c05d71ad",
									"id": 26,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "modify",
									"nameLocation": "242:6:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "number",
												"nameLocation": "256:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 26,
												"src": "249:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "249:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "248:15:0"
									},
									"returnParameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "270:0:0"
									},
									"scope": 35,
									"src": "233:203:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 33,
										"nodeType": "Block",
										"src": "646:31:0",
										"statements": [
											{
												"expression": {
													"id": 31,
													"name": "count",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3,
													"src": "664:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 30,
												"id": 32,
												"nodeType": "Return",
												"src": "657:12:0"
											}
										]
									},
									"functionSelector": "a87d942c",
									"id": 34,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getCount",
									"nameLocation": "607:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 27,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "615:2:0"
									},
									"returnParameters": {
										"id": 30,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 29,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 34,
												"src": "639:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 28,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "639:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:8:0"
									},
									"scope": 35,
									"src": "598:79:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 36,
							"src": "25:657:0",
							"usedErrors": []
						}
					],
					"src": "0:682:0"
				},
				"id": 0
			}
		}
	}
}